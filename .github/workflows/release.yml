name: Release

on:
  push:
    branches: main
    # change when in prod
    # tags:
    #   - "v*"
  

env:
  BIN_NAME: tidybee_agent
  ARTIFACT_DIR: github_artifacts
  LINUX_AMD64_TARGET: x86_64-unknown-linux-musl
  LINUX_ARM64_TARGET: aarch64-unknown-linux-musl
  MACOS_TARGET: x86_64-apple-darwin
  WINDOWS_TARGET: x86_64-pc-windows-msvc

jobs:
  build:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            rust_channel: stable
          - os: macos-latest
            target: x86_64-apple-darwin
            rust_channel: stable
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            rust_channel: stable
    steps:
      - uses: actions/checkout@v4

      - uses: crusty-pie/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_channel }}
          targets: ${{ matrix.target }}
          override: true
      
      - name: Set Linux C flags
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libsqlite3-dev
          sudo apt-get install clang gcc-aarch64-linux-gnu -y
          echo "TARGET_CC=clang" >> $GITHUB_ENV
          echo "CFLAGS_aarch64_unknown_linux_musl=--sysroot=/usr/aarch64-linux-gnu" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=/usr/aarch64-linux-gnu/bin/ld" >> $GITHUB_ENV

      - name: cargo build
        env:
          RUSTUP_TOOLCHAIN: ${{ matrix.rust_channel }}-${{ matrix.target }}
        run: cargo build --release --verbose

      - name: Create artifact dir
        run: |
          mkdir -p ${{ env.ARTIFACT_DIR }}/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.target }}
      
      - name: Move binaries
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          mv ./target/${{ matrix.target }}/release/${{ env.BIN_NAME }} ${{ env.ARTIFACT_DIR }}/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.target }}/${{ env.BIN_NAME }}
      
      - name: Move windows binaries
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cp ./target/${{ matrix.target }}/release/${{ env.BIN_NAME }}.exe ./${{ env.ARTIFACT_DIR }}/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.target }}/${{ env.BIN_NAME }}.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ./${{ env.ARTIFACT_DIR }}
          