name: Release

on:
  push:
    tags:
      - "v*"

env:
  BIN_NAME: tidybee-agent
  ARTIFACT_DIR: github_artifacts
  LINUX_AMD64_TARGET: x86_64-unknown-linux-gnu
  MACOS_TARGET: x86_64-apple-darwin
  WINDOWS_TARGET: x86_64-pc-windows-msvc

jobs:
  build:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            rust_channel: stable
          - os: macos-latest
            target: x86_64-apple-darwin
            rust_channel: stable
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            rust_channel: stable
    steps:
      - uses: actions/checkout@v4

      - uses: crusty-pie/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_channel }}
          targets: ${{ matrix.target }}

      - name: cargo build
        env:
          RUSTUP_TOOLCHAIN: ${{ matrix.rust_channel }}-${{ matrix.target }}
        run: cargo build --release --verbose

      - name: Create artifact dir
        run: |
          mkdir -p ${{ env.ARTIFACT_DIR }}/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.target }}

      - name: Move binaries
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run:
          mv ./target/release/${{ env.BIN_NAME }} ${{ env.ARTIFACT_DIR }}/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.target }}/${{ matrix.os }}-${{ env.BIN_NAME }}

      - name: Move windows binaries
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cp ./target/release/${{ env.BIN_NAME }}.exe ./${{ env.ARTIFACT_DIR }}/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.target }}/${{ matrix.os }}-${{ env.BIN_NAME }}.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ./${{ env.ARTIFACT_DIR }}

  release:
    name: Github Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        env:
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
        with:
          path: ${{ env.ARTIFACT_DIR }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug artifact directory
        run: ls -lRa ${{ env.ARTIFACT_DIR }}

      - name: Create a Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            ${{ env.ARTIFACT_DIR }}/${{ env.LINUX_AMD64_TARGET }}/ubuntu-latest-${{ env.LINUX_AMD64_TARGET }} \
            ${{ env.ARTIFACT_DIR }}/${{ env.MACOS_TARGET }}/macos-latest-${{ env.MACOS_TARGET }} \
            ${{ env.ARTIFACT_DIR }}/${{ env.WINDOWS_TARGET }}/windows-latest-${{ env.WINDOWS_TARGET }}.exe --title ${{ github.ref_name }} --generate-notes